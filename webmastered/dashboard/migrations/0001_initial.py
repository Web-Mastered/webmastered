# Generated by Django 3.2.4 on 2022-01-15 15:07

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail_color_panel.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0062_comment_models_and_pagesubscription'),
        ('wagtailimages', '0023_add_choose_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='WebsiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary', wagtail_color_panel.fields.ColorField(default='#0d6efd', help_text='default is #0d6efd', max_length=7)),
                ('secondary', wagtail_color_panel.fields.ColorField(default='#6c757d', help_text='default is #6c757d', max_length=7)),
                ('success', wagtail_color_panel.fields.ColorField(default='#198754', help_text='default is #198754', max_length=7)),
                ('info', wagtail_color_panel.fields.ColorField(default='#0dcaf0', help_text='default is #0dcaf0', max_length=7)),
                ('warning', wagtail_color_panel.fields.ColorField(default='#ffc107', help_text='default is #ffc107', max_length=7)),
                ('danger', wagtail_color_panel.fields.ColorField(default='#dc3545', help_text='default is #dc3545', max_length=7)),
                ('light', wagtail_color_panel.fields.ColorField(default='#f8f9fa', help_text='default is #f8f9fa', max_length=7)),
                ('dark', wagtail_color_panel.fields.ColorField(default='#212529', help_text='default is #212529', max_length=7)),
                ('tracking_id', models.CharField(blank=True, help_text='Enter your Google Analytics Tracking ID here, it should look something like this: UA-000000-2', max_length=24, null=True, verbose_name='Tracking ID')),
                ('organisation_legal_name', models.CharField(blank=True, help_text='The official name of the organization, e.g. the registered company name.', max_length=100, null=True, verbose_name='Organisation Legal name')),
                ('organisation_alternate_name', models.CharField(blank=True, help_text='Another name the organisation goes by.', max_length=100, null=True, verbose_name='Alternative organisation name')),
                ('logo', models.ForeignKey(blank=True, help_text='Choose an image for the site logo. This logo will be displayed at various places around the website.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
                ('site_icon', models.ForeignKey(blank=True, help_text='Site icons are what you see in browser tabs and bookmark bars, please upload a square image.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Website Settings',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('account_provider', models.CharField(help_text='Provider of the account, e.g. Facebook, Instagram, LinkedIn, etc.', max_length=100)),
                ('account_username', models.CharField(help_text='Username or handle of the account.', max_length=100)),
                ('account_url', models.URLField(help_text='URL link to the account profile.', verbose_name='Account URL')),
                ('schema_settings', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to='dashboard.websitesettings')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Metrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'verbose_name': 'Engine Metrics',
            },
        ),
        migrations.CreateModel(
            name='LinkedURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link', models.URLField(blank=True, help_text="URL of a reference Web page that unambiguously indicates the item's identity.", max_length=100, null=True, verbose_name='Linked URL')),
                ('schema_settings', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_url', to='dashboard.websitesettings')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('contact_type', models.CharField(help_text='Specify the type, e.g. technical support, billing support, sales, etc.', max_length=100)),
                ('email', models.EmailField(help_text='Email address for this contact point.', max_length=254)),
                ('telephone', models.CharField(blank=True, help_text='Telephone number for this contact point.', max_length=100, null=True)),
                ('schema_settings', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_point', to='dashboard.websitesettings')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AboutEngine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'verbose_name': 'About Engine',
            },
        ),
    ]
