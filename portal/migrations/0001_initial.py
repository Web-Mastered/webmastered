# Generated by Django 3.2.4 on 2021-08-03 10:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(help_text="Customer's website domain name.", max_length=255, unique=True)),
                ('stripe_customer_id', models.CharField(help_text='Stripe ID of customer', max_length=255, unique=True, verbose_name='Stripe Customer ID')),
                ('cloudflare_zone_id', models.CharField(help_text='CF Zone ID of customer', max_length=255, unique=True, verbose_name='Cloudflare Zone ID')),
                ('digitalocean_droplet_id', models.CharField(help_text='DO Droplet ID of customer', max_length=255, unique=True, verbose_name='DigitalOcean Droplet ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='PricingTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Identifying name for this pricing table.', max_length=255, unique=True)),
                ('hosting_prices', models.BooleanField(default=False, help_text='If this is set to true, this table will be displayed in the client portal under the server upgrades page.')),
                ('html_table', models.TextField(help_text='HTML table for pricing.', max_length=500000, verbose_name='HTML Table')),
            ],
            options={
                'verbose_name': 'Pricing Table',
                'verbose_name_plural': 'Pricing Tables',
            },
        ),
        migrations.CreateModel(
            name='StaffRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(help_text="Create new staff roles here, these roles an be assigned to 'staff' users.", max_length=154, unique=True)),
            ],
            options={
                'verbose_name': 'Staff Role',
                'verbose_name_plural': 'Staff Roles',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1024)),
                ('roles', models.ManyToManyField(blank=True, to='portal.StaffRoles')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staff',
            },
        ),
        migrations.CreateModel(
            name='PrioritySupportSubmissions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(max_length=100000)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.client')),
            ],
            options={
                'verbose_name': 'Priority Support Submission',
                'verbose_name_plural': 'Priority Support Submissions',
            },
        ),
        migrations.CreateModel(
            name='HostingUpgradeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_tier', models.CharField(choices=[('Basic 12M', 'Basic 12M'), ('Basic 18M', 'Basic 18M'), ('Basic 24M', 'Basic 24M'), ('Standard 12M', 'Standard 12M'), ('Standard 18M', 'Standard 18M'), ('Standard 24M', 'Standard 24M'), ('Professional 12M', 'Professional 12M'), ('Professional 18M', 'Professional 18M'), ('Professional 24M', 'Professional 24M')], help_text='This is the hosting tier that the client wants to upgrade to.', max_length=255, verbose_name='Requested tier')),
                ('client_comments', models.TextField(blank=True, help_text='Comments left by client.', max_length=500000, null=True, verbose_name='Client comments')),
                ('scheduled_date', models.DateField(blank=True, help_text='Date scheduled to carry out the upgrade.', null=True)),
                ('scheduled_time', models.TimeField(blank=True, help_text='Scheduled time on the scheduled date when the upgrade process will start', null=True)),
                ('is_finished', models.BooleanField()),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='portal.client')),
            ],
            options={
                'verbose_name': 'Hosting Upgrade Request',
                'verbose_name_plural': 'Hosting Upgrade Requests',
            },
        ),
        migrations.CreateModel(
            name='FeatureRequests',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.TextField(max_length=100000)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.client')),
            ],
            options={
                'verbose_name': 'Feature Request',
                'verbose_name_plural': 'Feature Requests',
            },
        ),
        migrations.CreateModel(
            name='DNSRecordRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.CharField(choices=[('A', 'A Record'), ('AAAA', 'AAAA Record'), ('CNAME', 'CNAME Record'), ('MX', 'MX Record'), ('TXT', 'TXT Record'), ('OTHER', 'Other Record')], help_text='Choose the type of records this is.', max_length=255, verbose_name='Type')),
                ('hostname', models.CharField(help_text='This is the hostname for the records.', max_length=255, verbose_name='Hostname')),
                ('content', models.CharField(help_text='This is where the hostname points to.', max_length=2048, verbose_name='Content')),
                ('ttl', models.IntegerField(blank=True, help_text='OPTIONAL. This is the TTL of the records, this can be left blank.', null=True, verbose_name='TTL')),
                ('priority', models.IntegerField(blank=True, help_text='ONLY FOR MX RECORDS. This is the priority of the record.', null=True, verbose_name='MX Priority')),
                ('added', models.BooleanField(default=False)),
                ('added_timestamp', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.client')),
            ],
            options={
                'verbose_name': 'DNS Record Request',
                'verbose_name_plural': 'DNS Record Requests',
            },
        ),
    ]
